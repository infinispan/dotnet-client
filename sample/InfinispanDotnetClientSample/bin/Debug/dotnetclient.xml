<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dotnetclient</name>
    </assembly>
    <members>
        <member name="M:Infinispan.DotNetClient.Operations.HotRodOperation.readHeaderAndValidate(Infinispan.DotNetClient.Trans.Transport,Infinispan.DotNetClient.Protocol.HeaderParams)">
            Magic	| Message Id | Op code | Status | Topology Change Marker
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCache.size">
            
            Remote Cache Interface
            Author: sunimalr@gmail.com
            
        </member>
        <member name="T:Infinispan.DotNetClient.Operations.AbstractKeyOperation`1">
            <summary>
            
            Abstraction of operations that involves a Key. eg: RemoveOperation
              
            Author: sunimalr@gmail.com
            </summary>
        </member>
        <member name="M:Infinispan.DotNetClient.Operations.AbstractKeyOperation`1.sendKeyOperation(System.Byte[],Infinispan.DotNetClient.Trans.Transport,System.Byte,System.Byte)">
            <summary>
            Sends a request which involves only a 'key' (no value) to the server
            </summary>
            <param name="key"></param>
            <param name="transport"></param>
            <param name="opCode">OPeration Code of the request</param>
            <param name="opRespCode">Expected response code</param>
            <returns>Status returned form the server</returns>
        </member>
        <member name="M:Infinispan.DotNetClient.Operations.AbstractKeyOperation`1.returnVersionedOperationResponse(Infinispan.DotNetClient.Trans.Transport,Infinispan.DotNetClient.Protocol.HeaderParams)">
            <summary>
            USed to get the versioned operation response. It contains version information of the data in the server.  
            </summary>
            <param name="transport"></param>
            <param name="param"></param>
            <returns>Version data on the entry picked</returns>
        </member>
        <member name="M:Infinispan.DotNetClient.Operations.AbstractKeyOperation`1.returnPossiblePrevValue(Infinispan.DotNetClient.Trans.Transport)">
            <summary>
            If forceReturnValue is true, this returns the previous value of the entry.
            </summary>
            <param name="transport"></param>
            <returns>Previous value of the queried entry</returns>
        </member>
        <member name="T:Infinispan.DotNetClient.Util.DefaultSerializer">
             <summary>
             This is the default serializer.
             Handles serialization and deserialization of objects.
            This allows the user to convert and high level data type to a byte array.
             
             Author: sunimalr@gmail.com
             
             </summary>
        </member>
        <member name="M:Infinispan.DotNetClient.Util.DefaultSerializer.#ctor">
            <summary>
            The default serializer to be used if the user doesn't use a custom serialzer
            </summary>
        </member>
        <member name="M:Infinispan.DotNetClient.Util.DefaultSerializer.serialize(System.Object)">
            <summary>
            converts an object ob to a byte array.
            </summary>
            <param name="ob"></param>
            <returns>Serialzed object as a byte array</returns>
        </member>
        <member name="M:Infinispan.DotNetClient.Util.DefaultSerializer.deserialize(System.Byte[])">
             <summary>
            converts a byte array to a object. 
             </summary>
             <param name="dataArray"></param>
             <returns>Deserialized object from byte array</returns>
        </member>
        <member name="T:Infinispan.DotNetClient.Operations.AbstractKeyValueOperation`1">
             <summary>
            Abstraction of operations that involves a Key and a value. eg: PutOperation
            
            Author: sunimalr@gmail.com 
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="T:Infinispan.DotNetClient.VersionedOperationResponse">
            <summary>
            Keeps information on the version of the data present in the server.
            </summary>
        </member>
        <member name="T:Infinispan.DotNetClient.Util.ClientConfig">
             <summary>
            This class keeps configuration settings and also reads them from the app.config file 
            Author: sunimalr@gmail.com
             </summary>
        </member>
        <member name="M:Infinispan.DotNetClient.Util.ClientConfig.#ctor(System.String,System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            This method can be used to override the settings mentioned in the Configuration file.
            </summary>
            <param name="ServerIP"></param>
            <param name="ServerPort"></param>
            <param name="CacheName"></param>
            <param name="TopologyID"></param>
            <param name="ForceReturnValue">If this parameter is true the server sends the previous value which existed before manipulation.</param>
        </member>
        <member name="M:Infinispan.DotNetClient.Util.ClientConfig.#ctor">
            <summary>
            This is the default constructer and can be used in a situation where configuration settings mentioned in XML config files are used.
            </summary>
        </member>
        <member name="T:Infinispan.DotNetClient.RemoteCacheManager">
            
            Aggregates RemoteCaches and lets user to get hold of a remotecache.
            Author: sunimalr@gmail.com
            
        </member>
        <member name="F:Infinispan.DotNetClient.Util.UnsignedNumeric.logger">
            Reads an int stored in variable-length format.  Reads between one and five bytes.  Smaller values take fewer
            bytes.  Negative numbers are not supported.
        </member>
        <member name="M:Infinispan.DotNetClient.Util.UnsignedNumeric.readUnsignedInt(System.Byte[],System.Int32)">
            Reads an int stored in variable-length format.  Reads between one and five bytes.  Smaller values take fewer
            bytes.  Negative numbers are not supported.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.TIME_SINCE_START">
            Number of seconds since Hot Rod started.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.CURRENT_NR_OF_ENTRIES">
            Number of entries currently in the Hot Rod server
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.TOTAL_NR_OF_ENTRIES">
            Number of entries stored in Hot Rod server.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.STORES">
            Number of put operations.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.RETRIEVALS">
            Number of get operations.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.HITS">
            Number of get hits.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.MISSES">
            Number of get misses.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.REMOVE_HITS">
            Number of removal hits.
        </member>
        <member name="F:Infinispan.DotNetClient.ServerStatistics.REMOVE_MISSES">
            Number of removal misses.
        </member>
        <member name="T:Infinispan.DotnetClient.RemoteCacheImpl">
            
            Concrete implementation of RemoteCache inteface
            Author: sunimalr@gmail.com
            
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.#ctor(Infinispan.DotNetClient.RemoteCacheManager,Infinispan.DotNetClient.Util.ClientConfig,Infinispan.DotNetClient.Util.Serializer,Infinispan.DotNetClient.Trans.TCP.TCPTransportFactory)">
            <summary>
            The constructor of RemoteCacheImpl which uses default config properties.
            </summary>
            <param name="cacheManager">The CacheManager which holds the RemoteCache</param>
            <param name="configuration">Configuration of the client</param>
            <param name="s">Serializer to be used to. Pass a custom serializer of DefaultSerializer</param>
            <param name="start">Boolean start</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.#ctor(Infinispan.DotNetClient.RemoteCacheManager,Infinispan.DotNetClient.Util.ClientConfig,System.String,Infinispan.DotNetClient.Util.Serializer,Infinispan.DotNetClient.Trans.TCP.TCPTransportFactory)">
            <summary>
            The constructor of RemoteCacheImpl
            </summary>
            <param name="cacheManager">The CacheManager which holds the RemoteCache</param>
            <param name="configuration">Configuration of the client</param>
            <param name="cacheName">Pass the cachename if it differs from the default cache name</param>
            <param name="s">Serializer to be used to. Pass a custom serializer of DefaultSerializer</param>
            <param name="start">Boolean start</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.#ctor(Infinispan.DotNetClient.RemoteCacheManager,Infinispan.DotNetClient.Util.ClientConfig,System.Boolean,Infinispan.DotNetClient.Util.Serializer,Infinispan.DotNetClient.Trans.TCP.TCPTransportFactory)">
            <summary>
             The constructor of RemoteCacheImpl
            </summary>
            <param name="cacheManager">The CacheManager which holds the RemoteCache</param>
            <param name="configuration">Configuration of the client</param>
            <param name="forceReturn">Pass ForceReturn value if it differs from the default falue</param>
            <param name="s">Serializer to be used to. Pass a custom serializer of DefaultSerializer</param>
            <param name="start">Boolean start</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.#ctor(Infinispan.DotNetClient.RemoteCacheManager,Infinispan.DotNetClient.Util.ClientConfig,System.String,System.Boolean,Infinispan.DotNetClient.Util.Serializer,Infinispan.DotNetClient.Trans.TCP.TCPTransportFactory)">
            <summary>
            The constructor of RemoteCacheImpl
            </summary>
            <param name="cacheManager">The CacheManager which holds the RemoteCache</param>
            <param name="configuration">Configuration of the client</param>
            <param name="cacheName">Pass the cachename if it differs from the default cache name</param>
            <param name="forceReturn">Pass ForceReturn value if it differs from the default falue</param>
            <param name="s">Serializer to be used to. Pass a custom serializer of DefaultSerializer</param>
            <param name="start">Boolean start</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.size">
            <summary>
            Used to get the number of records of the cache
            </summary>
            <returns>Current number of records in the cache</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.isEmpty">
            <summary>
            Used to check whether the cache is empty or not
            </summary>
            <returns>True if number of entries of the cache is zero</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.stats">
            <summary>
            Used to retreive statistical information about the remote cache
            </summary>
            <returns>Server Statistics</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.put``2(``1,``0)">
            <summary>
            Used to insert a new entry to the cache. Lifespan and maxidle time is infinite
            </summary>
            <typeparam name="V">Data type of Value</typeparam>
            <typeparam name="K">Data type of Key</typeparam>
            <param name="key">key</param>
            <param name="val">value</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.put``2(``1,``0,System.Int32,System.Int32)">
            <summary>
            Used to insert a new entry to the cache
            </summary>
            <typeparam name="V">Data type of Value</typeparam>
            <typeparam name="K">Data type of Key</typeparam>
            <param name="key">key</param>
            <param name="val">value</param>
            <param name="lifespaninMillis">Lifespan in milliseconds</param>
            <param name="maxIdleTimeinMillis">Maximum idle time in milliseconds</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.putIfAbsent``2(``1,``0)">
            <summary>
            Puts a new entry to cache only if the specified key is absent. Lifespan and maxidle time is infinite.
            </summary>
            <typeparam name="V">Data type of Value</typeparam>
            <typeparam name="K">Data type of Key</typeparam>
            <param name="key">key</param>
            <param name="val">value</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.putIfAbsent``2(``1,``0,System.Int32,System.Int32)">
            <summary>
            Puts a new entry to cache only if the specified key is absent.
            </summary>
            <typeparam name="V">Data type of Value</typeparam>
            <typeparam name="K">Data type of Key</typeparam>
            <param name="key">key</param>
            <param name="val">value</param>
            <param name="lifespaninMillis">Lifespan in milliseconds</param>
            <param name="maxIdleTimeinMillis">Maximum idle time in milliseconds</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.replace``2(``1,``0)">
            <summary>
            Replaces an existing value with a new value. Lifespan and maxidle time is infinite.
            </summary>
            <typeparam name="V">Data type of Value</typeparam>
            <typeparam name="K">Data type of Key</typeparam>
            <param name="key">key</param>
            <param name="val">value</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.replace``2(``1,``0,System.Int32,System.Int32)">
            <summary>
            Replaces an existing value with a new value.
            </summary>
            <typeparam name="V">Data type of Value</typeparam>
            <typeparam name="K">Data type of Key</typeparam>
            <param name="key">key</param>
            <param name="val">value</param>
            <param name="lifespaninMillis">Lifespan in milliseconds</param>
            <param name="maxIdleTimeinMillis">Maximum idle time in milliseconds</param>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.containsKey(System.Object)">
            <summary>
            Checks whether the passes key exists in the cache
            </summary>
            <param name="key">Key</param>
            <returns>True if the passed key exixts. False if not exist.</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.get``1(System.Object)">
            <summary>
            Used to retrieve the method 
            </summary>
            <typeparam name="V">Value</typeparam>
            <param name="key">Key</param>
            <returns>Retrieved Value</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.getBulk``2(System.Int32)">
            <summary>
            Gets bulk data from the cache
            </summary>
            <typeparam name="K">Key</typeparam>
            <typeparam name="V">Value</typeparam>
            <param name="size">Number of records</param>
            <returns>Dictionary of retrieved data</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.getBulk``2">
            <summary>
            Gets bulk data from the cache
            </summary>
            <typeparam name="K">Key</typeparam>
            <typeparam name="V">Value</typeparam>
            <returns>Dictionary of retrieved data</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.remove``1(System.Object)">
            <summary>
            Removes a record with given key
            </summary>
            <typeparam name="K">Key Data Type</typeparam>
            <param name="key">Key</param>
            <returns>Removed value</returns>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.clear">
            <summary>
            Clears the cache
            </summary>
        </member>
        <member name="M:Infinispan.DotnetClient.RemoteCacheImpl.ping">
            <summary>
            Application level operation to check existance of the cache
            </summary>
            <returns>PingRsult</returns>
        </member>
    </members>
</doc>
