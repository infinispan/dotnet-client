syntax="proto3";
package sample_bank_account;

/**
 * @Indexed
 * @TypeId(1000042)
 */
message User {

   /**
    * @Field(index = Index.YES, store = Store.YES)
    * @SortableField
    */
   int32 id = 1;

   /**
    * @Field(store = Store.YES)
    */
   repeated int32 accountIds = 2 [packed=false];

   /**
    * @Field(store = Store.YES)
    */
   string name = 3;

   /**
    * @Field(store = Store.YES)
    */
   string surname = 4;

message Address {
   /**
    * @Field(store = Store.YES)
    */
      string street = 1;
   /**
    * @Field(store = Store.YES)
    */
      string postCode = 2;
   /**
    * @Field(store = Store.YES)
    */
      int32 number = 3;
   }


   /**
    * @Field(store = Store.YES)
    */
   repeated Address addresses = 5 [packed=false];     //a repeated field cannot be marked required

   /**
    * @Field(store = Store.YES, indexNullAs = "-1")
    */
   int32 age = 6;   // persisting age instead of birth date is not ideal but is ok for our sample code

/**
 * @TypeId(1000043)
 */
   enum Gender {
      MALE = 0;    //NOTE: It seems negative values are accepted too!
      FEMALE = 1;
   }

   /**
    * @Field(store = Store.YES)
    */
   Gender gender = 7;

   string notes = 8;
}
/**
 * @Indexed
 * @TypeId(1000044)
 */
message Account {

   /**
    * @Field(store = Store.YES)
    */
   int32 id = 1 ;

   /**
    * @Field(store = Store.YES)
    */
   string description = 2;

   /**
    * @Field(store = Store.YES)
    */
   fixed64 creationDate = 3;

   message Limits {
       double maxDailyLimit = 1;
       double maxTransactionLimit = 2;
   }

   /**
    * @Field(store = Store.YES)
    */
   Limits limits = 4;

   /**
    * @Field(store = Store.YES)
    */
   repeated bytes blurb = 5 [packed=false];
}

/**
 * @Indexed
 * @TypeId(1000045)
 */
message Transaction {

   /**
    * @Field(store = Store.YES)
    */
   int32 id = 1 ;

   /**
    * @Field
    */
   string description = 2;

   /**
    * @Field(store = Store.YES, analyze = Analyze.YES, index = Index.YES)
    */
   string longDescription = 3;

   /**
    * @Field(store = Store.YES)
    */
   int32 accountId = 4 ;

   /**
    * @Field(store = Store.YES)
    */
   fixed64 date = 5;  // there is no native Date type in protobuf so we have to store it as a long

   /**
    * @Field(store = Store.YES)
    */
   double amount = 6; // how do I store a BigDecimal? maybe as a byte array ..

   /**
    * @Field(store = Store.YES)
    */
   bool isDebit = 7;

   bool isValid = 8;
}

/**
 *
 */
message int_array {
   repeated int32 theArray = 1 [packed=false];
}

/**
 *
 */
message user_list {
   repeated User theList = 1 [packed=false];
}

//todo demonstrate collection of 'any'
